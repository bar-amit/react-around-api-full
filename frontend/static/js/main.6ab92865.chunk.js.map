{"version":3,"sources":["contexts/CurrentUserContext.js","images/header__logo_large.svg","components/Header.js","components/Card.js","images/profile__image.jpg","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/UserForm.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","images/info-tooltip__succeed.svg","images/info-tooltip__fail.svg","components/InfoTooltip.js","utils/auth.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","createContext","Header","onLogout","email","useContext","location","useLocation","className","src","logo","alt","onClick","pathname","to","Card","data","onCardClick","onCardLike","onCardDelete","id","_id","isOwn","owner","isLiked","likes","some","like","type","link","name","length","Main","onEditProfileClick","onAddPlaceClick","onEditAvatarClick","cardsList","React","avatar","about","avatarImage","map","card","Footer","PopupWithForm","title","buttonText","isOpen","onClose","onSubmit","children","useState","currentButtonText","setCurrentButtonText","e","target","classList","contains","preventDefault","then","EditProfilePopup","formName","currentName","currentAbout","setName","setAbout","handleInputChange","value","useEffect","placeholder","minLength","maxLength","required","onChange","EditAvatarPopup","inputRef","useRef","current","ref","AddPlacePopup","setLink","handleChange","ImagePopup","UserForm","handleFormSubmit","formTitle","linkText","setEmail","password","setPassword","Login","handleLogin","Register","handleRegistration","ProtectedRoute","signedIn","from","InfoTooltip","hasSucceed","text","successIcon","failIcon","process","authBaseUrl","handleResponse","res","ok","json","Promise","reject","status","statusText","a","fetch","method","headers","body","JSON","stringify","auth","checkToken","token","Authorization","logout","removeToken","isSignedIn","user","signup","signin","Api","host","authorization","this","_host","_headers","userId","undefined","_handleResponse","getApi","App","currentUser","setCurrentUser","cards","setCards","navigate","useNavigate","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","cardId","confirmPopupState","setConfirmPopupState","isInfoTooltipOpen","setisInfoTooltipOpen","selectedCard","setSelectedCard","closeAllPopups","handleEscapeClose","key","document","addEventListener","removeEventListener","api","localStorage","getItem","updateUserInfo","getUserInfo","catch","login","setItem","saveToken","replace","console","log","checkLocalStorageToken","all","getCards","Provider","removeItem","path","element","error","Error","message","removeLike","addLike","updatedCard","index","findIndex","slice","updateUser","addCard","updateUserAvatar","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ab92865.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const CurrentUserContext = createContext();\n","export default __webpack_public_path__ + \"static/media/header__logo_large.4e8e0a1d.svg\";","import { useContext } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport logo from \"../images/header__logo_large.svg\";\n\nfunction Header({ onLogout }) {\n  const { email } = useContext(CurrentUserContext);\n  const location = useLocation();\n\n  return (\n    <header className=\"header\">\n      <img className=\"header__logo\" src={logo} alt=\"Around the U.S. logo\" />\n      {email ? (\n        <nav>\n          <ul className=\"header__nav\">\n            <li>\n              <p className=\"header__email\">{email}</p>\n            </li>\n            <li className=\"header__link\" onClick={onLogout}>\n              Log out\n            </li>\n          </ul>\n        </nav>\n      ) : (\n        <nav>\n          <ul className=\"header__nav\">\n            {location.pathname === \"/login\" ? (\n              <li>\n                <Link className=\"header__link\" to=\"register\">\n                  Sign up\n                </Link>\n              </li>\n            ) : (\n              <li>\n                <Link className=\"header__link\" to=\"login\">\n                  Log in\n                </Link>\n              </li>\n            )}\n          </ul>\n        </nav>\n      )}\n    </header>\n  );\n}\n\nexport default Header;\n","import { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n/**\n * userData type defenition:\n * @typedef {Object} userData\n * @property {string} name - Username.\n * @property {string} about - User description.\n * @property {string} avatar - Link for user's avatar.\n * @property {string} cohort - User's cohort.\n * @property {string} _id - User ID.\n *\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<userData>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n *\n * Card Props type defenition:\n * @typedef {Object} CardProps - props for Card\n * @property {cardData} data - Card data\n * @property {Function} onCardClick - Opens image popup on click.\n * @property {Function} onCardLike - Handles like button click.\n * @property {Function} onCardDelete - Handles card delete\n */\n/**\n * Card JSX component\n * @param {CardProps} props - props object\n */\n\nfunction Card({ data, onCardClick, onCardLike, onCardDelete }) {\n  const { _id: id } = useContext(CurrentUserContext);\n\n  const isOwn = id === data.owner;\n  const isLiked = data.likes?.some((like) => like === id);\n\n  return (\n    <li className=\"card\">\n      {isOwn ? (\n        <button\n          className=\"card__delete-button\"\n          type=\"button\"\n          aria-label=\"delete\"\n          onClick={() => onCardDelete(data)}\n        ></button>\n      ) : (\n        \"\"\n      )}\n      <img\n        className=\"card__image\"\n        src={data.link}\n        alt={data.name}\n        onClick={() => onCardClick(data)}\n      />\n      <div className=\"card__panel\">\n        <h2 className=\"card__title\">{data.name}</h2>\n        <div className=\"card__like\">\n          <button\n            className={`card__like-button ${\n              isLiked ? \"card__like-button_active\" : \"\"\n            }`}\n            type=\"button\"\n            aria-label=\"Like\"\n            onClick={() => onCardLike(data)}\n          />\n          <p className=\"card__like-counter\">{data.likes?.length || \"0\"}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/profile__image.453c0ae5.jpg\";","import React from \"react\";\nimport Card from \"./Card\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nimport avatarImage from \"../images/profile__image.jpg\";\n\n/**\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<string>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n */\n\n/**\n * Main section component.\n * @param {{onEditProfileClick: Function, onAddPlaceClick: Function, onEditAvatarClick: Function, onCardClick: Function, onCardLike: Function, onCardDelete: Function cardsList: Array<cardData>}} props - Props object.\n * @returns {JSX.Element} Main JSX component.\n */\nfunction Main({\n  onEditProfileClick,\n  onAddPlaceClick,\n  onEditAvatarClick,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n  cardsList,\n}) {\n  const { name, avatar, about } = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"main\">\n      <section className=\"profile\">\n        <button\n          className=\"profile__avatar\"\n          type=\"button\"\n          onClick={onEditAvatarClick}\n        >\n          <img\n            className=\"profile__image\"\n            src={avatar ? avatar : avatarImage}\n            alt=\"profile\"\n          />\n        </button>\n        <div className=\"profile__info\">\n          <h1 className=\"profile__name\">{name ? name : \"Please be patient\"}</h1>\n          <button\n            className=\"profile__edit-button\"\n            type=\"button\"\n            aria-label=\"Edit profile\"\n            onClick={onEditProfileClick}\n          />\n          <p className=\"profile__bio\">\n            {about ? about : \"We are fetching your user info...\"}\n          </p>\n        </div>\n        <button\n          className=\"profile__add-button\"\n          type=\"button\"\n          aria-label=\"Add an item\"\n          onClick={onAddPlaceClick}\n        />\n      </section>\n      <section className=\"gallery\">\n        <ul className=\"gallery__container\">\n          {cardsList.map((card) => (\n            <Card\n              data={card}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n              key={card._id}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyrighs\">&#169; 2021 Around The U.S.</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\n/**\n * Popup with form component.\n * @param {{title: string, name: string, buttonText: string, isOpen: boolean, onClose: Function, onSubmit: Function, children: JSX.Element[]}} props - Props object.\n * @returns {JSX.Element} Popup With Form JSX component.\n */\nfunction PopupWithForm({\n  title,\n  name,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n  children,\n}) {\n  const [currentButtonText, setCurrentButtonText] = React.useState(buttonText);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setCurrentButtonText(\"Saving...\");\n    onSubmit().then(() => setCurrentButtonText(buttonText));\n  }\n\n  const handleOverlayClose = (e) => {\n    if (e.target.classList.contains(\"popup_visible\")) onClose();\n  };\n\n  return (\n    <div\n      className={`popup popup_name_${name} ${isOpen ? \"popup_visible\" : \"\"}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__container\">\n        <button\n          className=\"popup__close-button popup__close-button_shrink\"\n          type=\"button\"\n          aria-label=\"close\"\n          onClick={onClose}\n        />\n        <h2 className=\"popup__title\">{title}</h2>\n        <form\n          className={`form form_name_${name}`}\n          name={name}\n          onSubmit={handleSubmit}\n        >\n          {children}\n          <button className=\"form__save-button\" type=\"submit\">\n            {currentButtonText}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import { useState, useContext, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n/**\n * @typedef {Object} EditProfileProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {EditProfileProps} props - JSX props.\n * @returns\n */\nfunction EditProfilePopup({\n  title,\n  name: formName,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n}) {\n  const { name: currentName, about: currentAbout } =\n    useContext(CurrentUserContext);\n\n  const [name, setName] = useState(currentName);\n  const [about, setAbout] = useState(currentAbout);\n\n  function handleInputChange(e) {\n    if (e.target.name === \"name\") setName(e.target.value);\n    else setAbout(e.target.value);\n  }\n\n  function handleEditProfileSubmit() {\n    return onSubmit({ name, about });\n  }\n\n  useEffect(() => {\n    setAbout(currentAbout);\n    setName(currentName);\n  }, [currentName, currentAbout, isOpen]);\n\n  return (\n    <PopupWithForm\n      title={title}\n      name={formName}\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleEditProfileSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          id=\"input_name\"\n          className=\"form__input form__input_type_name\"\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          required\n          onChange={handleInputChange}\n        />\n        <span id=\"input_name-error\" className=\"form__input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          id=\"input_bio\"\n          className=\"form__input form__input_type_bio\"\n          value={about}\n          type=\"text\"\n          name=\"bio\"\n          placeholder=\"About me\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          required\n          onChange={handleInputChange}\n        />\n        <span id=\"input_bio-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n/**\n * @typedef {Object} EditAvatarProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {EditAvatarProps} props - JSX props.\n * @returns\n */\nfunction EditAvatarPopup({\n  title,\n  name: formName,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n}) {\n  const inputRef = useRef();\n\n  function handleEditAvatarSubmit() {\n    return onSubmit(inputRef.current.value);\n  }\n\n  return (\n    <PopupWithForm\n      title={title}\n      name={formName}\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleEditAvatarSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          id=\"input_url\"\n          className=\"form__input form__input_type_url\"\n          ref={inputRef}\n          type=\"url\"\n          name=\"url\"\n          placeholder=\"Image URL\"\n          required\n        />\n        <span id=\"input_url-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useState, useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n/**\n * @typedef {Object} AddPlaceProps\n * @property {string} title - Form title\n * @property {string} name - Form name\n * @property {string} buttonText - Button text\n * @property {boolean} isOpen - Is the popup open\n * @property {Function} onClose - Function to close the popup\n * @property {Function} onSubmit - Function to handle the form data\n */\n\n/**\n *\n * @param {AddPlaceProps} props - JSX props\n * @returns\n */\nfunction AddPlacePopup({\n  title,\n  name: formName,\n  buttonText,\n  isOpen,\n  onClose,\n  onSubmit,\n}) {\n  const [name, setName] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  function handleChange(e) {\n    if (e.target.name === \"title\") setName(e.target.value);\n    else setLink(e.target.value);\n  }\n\n  function handleNewPlaceSubmit() {\n    return onSubmit({ name, link });\n  }\n\n  useEffect(() => {\n    setName(\"\");\n    setLink(\"\");\n  }, [isOpen]);\n\n  return (\n    <PopupWithForm\n      title={title}\n      name={formName}\n      buttonText={buttonText}\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleNewPlaceSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          id=\"input_title\"\n          className=\"form__input form__input_type_title\"\n          value={name}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          required\n          onChange={handleChange}\n        />\n        <span id=\"input_title-error\" className=\"form__input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          id=\"input_link\"\n          className=\"form__input form__input_type_link\"\n          value={link}\n          type=\"url\"\n          name=\"link\"\n          placeholder=\"Image link\"\n          required\n          onChange={handleChange}\n        />\n        <span id=\"input_link-error\" className=\"form__input-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","/**\n * Popup with image component.\n * @param {{card: {_id: string, createdAt: string, likes: Array<string>, link: string, name: string, owner: {name: string, about: string, avatar: string, cohort: string, _id: string}, onClose: Function}}} props - Props object.\n * @returns {JSX.Element} Image Popup JSX component.\n */\nfunction ImagePopup({ card, onClose }) {\n  const handleOverlayClose = (e) => {\n    if (e.target.classList.contains(\"popup_visible\")) onClose();\n  };\n\n  return (\n    <div\n      className={`popup popup_name_picture ${card.link ? \"popup_visible\" : \"\"}`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__picture-container\">\n        <button\n          className=\"popup__close-button\"\n          type=\"button\"\n          aria-label=\"close\"\n          onClick={onClose}\n        />\n        <img className=\"popup__picture\" src={card.link} alt={card.name} />\n        <h2 className=\"popup__picture-title\">{card.name}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction UserForm({ handleFormSubmit, formTitle, formName, linkText }) {\n  const [currentButtonText, setCurrentButtonText] = useState(formTitle);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleInputChange(e) {\n    const inputName = e.target.name;\n    if (inputName === \"email\") setEmail(e.target.value);\n    else setPassword(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    setCurrentButtonText(\"Sending...\");\n    handleFormSubmit({ email, password });\n  }\n\n  return (\n    <main className=\"main\">\n      <section className=\"user-form\">\n        <h2 className=\"user-form__title\">{formTitle}</h2>\n        <form\n          className={`form form_name_${formName} user-form__form`}\n          name={formName}\n          onSubmit={handleSubmit}\n        >\n          <div className=\"user-form__section\">\n            <label className=\"form__field\">\n              <input\n                id=\"input_email\"\n                className=\"user-form__input\"\n                value={email}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                minLength=\"2\"\n                maxLength=\"40\"\n                required\n                onChange={handleInputChange}\n              />\n              <span\n                id=\"input_password-error\"\n                className=\"form__input-error\"\n              ></span>\n            </label>\n            <label className=\"form__field\">\n              <input\n                id=\"input_password\"\n                className=\"user-form__input\"\n                value={password}\n                type=\"text\"\n                name=\"password\"\n                placeholder=\"Password\"\n                minLength=\"2\"\n                maxLength=\"200\"\n                required\n                onChange={handleInputChange}\n              />\n              <span\n                id=\"input_password-error\"\n                className=\"form__input-error\"\n              ></span>\n            </label>\n          </div>\n          <div className=\"user-form__section\">\n            <button className=\"user-form__button\" type=\"submit\">\n              {currentButtonText}\n            </button>\n            <Link\n              to={formName === \"signin\" ? \"/register\" : \"/login\"}\n              className=\"user-form__link\"\n            >\n              {linkText}\n            </Link>\n          </div>\n        </form>\n      </section>\n    </main>\n  );\n}\n\nexport default UserForm;\n","import UserForm from \"./UserForm\";\n\nfunction Login({ handleLogin }) {\n  return (\n    <UserForm\n      handleFormSubmit={handleLogin}\n      formTitle=\"Sign in\"\n      formName=\"signin\"\n      linkText=\"Not a member yet? Sign up here!\"\n    />\n  );\n}\n\nexport default Login;\n","import UserForm from \"./UserForm\";\n\nexport default function Register({ handleRegistration }) {\n  return (\n    <UserForm\n      handleFormSubmit={handleRegistration}\n      formTitle=\"Sign up\"\n      formName=\"register\"\n      linkText=\"Already a member? Log in here!\"\n    />\n  );\n}\n","import { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { Navigate, useLocation } from \"react-router-dom\";\n\nexport default function ProtectedRoute({ children }) {\n  const { signedIn } = useContext(CurrentUserContext);\n\n  const location = useLocation();\n\n  if (!signedIn) return <Navigate to=\"/login\" from={location} />;\n  return children;\n}\n","export default __webpack_public_path__ + \"static/media/info-tooltip__succeed.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/info-tooltip__fail.df8eddf6.svg\";","import React from \"react\";\nimport successIcon from \"../images/info-tooltip__succeed.svg\";\nimport failIcon from \"../images/info-tooltip__fail.svg\";\n\n/**\n * Popup with form component.\n * @param {{title: string, name: string, buttonText: string, isOpen: boolean, onClose: Function, onSubmit: Function, children: JSX.Element[]}} props - Props object.\n * @returns {JSX.Element} Popup With Form JSX component.\n */\nfunction InfoTooltip({ hasSucceed, isOpen, onClose }) {\n  const handleOverlayClose = (e) => {\n    if (e.target.classList.contains(\"popup_visible\")) onClose();\n  };\n\n  const text = {\n    success: \"Success! You have now been registered.\",\n    fail: \"Oops, something went wrong! Please try again.\",\n  };\n\n  return (\n    <div\n      className={`popup popup_name_info-tooltip ${\n        isOpen ? \"popup_visible\" : \"\"\n      }`}\n      onClick={handleOverlayClose}\n    >\n      <div className=\"popup__container\">\n        <button\n          className=\"popup__close-button popup__close-button_shrink popup__close-button_centered\"\n          type=\"button\"\n          aria-label=\"close\"\n          onClick={onClose}\n        />\n        <img\n          className=\"popup__tooltip-icon\"\n          src={hasSucceed ? successIcon : failIcon}\n          alt={hasSucceed ? \"Operation succeed\" : \"Operation failed\"}\n        />\n        <h2 className=\"popup__title popup__title_centered\">\n          {hasSucceed ? text.success : text.fail}\n        </h2>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n","const { authBaseUrl = \"http://localhost:3001\" } = process.env;\n\nfunction handleResponse(res) {\n  if (res.ok) return res.json();\n  return Promise.reject(`error: ${res.status}, ${res.statusText}`);\n}\n\nfunction checkToken({ token }) {\n  return fetch(`${authBaseUrl}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then(handleResponse);\n}\n\nasync function signup({ password, email }) {\n  return fetch(`${authBaseUrl}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  }).then(handleResponse);\n}\n\n/**\n * sign in\n * @param {{email: string, password: string}}} params\n * @returns Promise<{token: string}>\n */\nasync function signin({ email, password }) {\n  return fetch(`${authBaseUrl}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  }).then(handleResponse);\n}\n\nfunction logout() {\n  removeToken();\n  auth.isSignedIn = false;\n  auth.user = { email: null, id: null };\n}\n\nconst auth = {\n  checkToken,\n  logout,\n  signup,\n  signin,\n};\n\nexport { auth };\n","/**\n * Api utility for Around the USA app.\n *\n *\n * userData type defenition:\n * @typedef {Object} userData\n * @property {string} name - Username.\n * @property {string} about - User description.\n * @property {string} avatar - Link for user's avatar.\n * @property {string} cohort - User's cohort.\n * @property {string} _id - User ID.\n *\n * cardData type defenition:\n * @typedef {Object} cardData\n * @property {string} _id - Card ID.\n * @property {string} createdAt - Time of creation.\n * @property {Array<userData>} likes - An array of IDs of users whom liked the card.\n * @property {string} link - Link to card image.\n * @property {string} name - Card title.\n * @property {userData} owner - User data of card's owner.\n */\n\nclass Api {\n  /**\n   * Constructor function for the Api class.\n   * @param {{host: string, authorization: string}} param0 - Options object with a base url and a token for the server.\n   */\n  constructor({ host, authorization }) {\n    this._host = host;\n    this._headers = { authorization };\n    this.userId = undefined;\n  }\n\n  /**\n   * A private method for handling a respones from server.\n   * @private\n   * @param {*} res\n   * @returns {Promise<*>}\n   */\n  _handleResponse(res) {\n    if (res.ok) return res.json();\n    return Promise.reject(`error: ${res.status}, ${res.statusText}`);\n  }\n\n  /**\n   * Fetching user data from the server\n   * @param {string} [id='me'] - Optional (default is own user)\n   * @returns {Promise<userData>} - User data.\n   */\n  getUserInfo(id = \"me\") {\n    return fetch(`${this._host}/users/${id}`, { headers: this._headers })\n      .then(this._handleResponse)\n      .then((data) => {\n        this.userId = data._id;\n        return data;\n      });\n  }\n\n  /**\n   * Setting a new avatar with a PATCH request to server.\n   * @param {string} avatar - Image link.\n   * @returns {Promise<userData>} - User data {name, about, avatar, cohort, _id}\n   */\n  updateUserAvatar(avatar) {\n    return fetch(`${this._host}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._handleResponse);\n  }\n\n  /**\n   * Setting new user name and description.\n   * @param {{name: string, about: string}} param0 - An object with username and description.\n   * @returns {Promise<userData>} - User data {name, about, avatar, cohort, _id}\n   */\n  updateUser({ name, about }) {\n    return fetch(`${this._host}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._handleResponse);\n  }\n\n  /**\n   * Fetching a list of cards from the server.\n   * @returns {Promise<Array<cardData>>} - A promise for an array of card data.\n   */\n  getCards() {\n    return fetch(`${this._host}/cards`, { headers: this._headers }).then(\n      this._handleResponse\n    );\n  }\n\n  /**\n   * Adding a new card to the server.\n   * @param {{name: string, link: string}} param0\n   * @returns {Promise<cardData>} - Card data.\n   */\n  addCard({ name, link }) {\n    return fetch(`${this._host}/cards`, {\n      method: \"POST\",\n      headers: {\n        ...this._headers,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._handleResponse);\n  }\n\n  /**\n   * Delete a card form the server.\n   * @param {string} id - Card id.\n   * @returns {Promise<undefined>}\n   */\n  deleteCard(id) {\n    return fetch(`${this._host}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  /**\n   * Add like to a card\n   * @param {string} id - card id\n   * @returns {Promise<cardData>} - Card data.\n   */\n  addLike(id) {\n    return fetch(`${this._host}/cards/likes/${id}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  /**\n   * Remove like from a card\n   * @param {string} id - card id\n   * @returns {Promise<cardData>} - Card data.\n   */\n  removeLike(id) {\n    return fetch(`${this._host}/cards/likes/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n}\n\nconst getApi = (token) =>\n  new Api({\n    host: \"http://localhost:3001\",\n    authorization: `Bearer ${token}`,\n  });\n\nexport default getApi;\n","import React from \"react\";\nimport { Routes, Route, Outlet, useNavigate } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\n\nimport { auth } from \"../utils/auth\";\nimport getApi from \"../utils/api\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({\n    signedIn: null,\n    email: \"\",\n    name: \"\",\n    about: \"\",\n    _id: \"\",\n  });\n\n  const [cards, setCards] = React.useState([]);\n\n  const navigate = useNavigate();\n\n  /*\n    Popups state\n  */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    React.useState(false);\n  const [confirmPopupState, setConfirmPopupState] = React.useState({\n    isOpen: false,\n    cardId: \"\",\n  });\n  const [isInfoTooltipOpen, setisInfoTooltipOpen] = React.useState({\n    isOpen: false,\n    hasSucceed: false,\n  });\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n    setisInfoTooltipOpen({ ...isInfoTooltipOpen, isOpen: false });\n  };\n\n  React.useEffect(() => {\n    const handleEscapeClose = (e) => {\n      if (e.key === \"Escape\") closeAllPopups();\n    };\n\n    document.addEventListener(\"keydown\", handleEscapeClose);\n\n    return () => document.removeEventListener(\"keydown\", handleEscapeClose);\n  }, []);\n\n  /*\n    Page's buttons click handlers\n  */\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n\n  /*\n    Form data functions\n  */\n  /**\n   * Update profile info\n   * @param {{name: string, about: string}} param0\n   * @returns Promise\n   */\n  function handlProfileSubmit({ name, about }) {\n    return api\n      .updateUser({ name, about })\n      .then((data) => setCurrentUser({ ...currentUser, ...data }))\n      .then(() => setIsEditProfilePopupOpen(false))\n      .catch((e) => console.log(e));\n  }\n  /**\n   * Add a new card\n   * @param {{name: string, link: string}} param0\n   * @returns Promise\n   */\n  function handlePlaceSubmit({ name, link }) {\n    return api\n      .addCard({ name, link })\n      .then((card) => setCards([card, ...cards]))\n      .then(() => setIsAddPlacePopupOpen(false))\n      .catch((e) => console.log(e));\n  }\n  /**\n   * Set a new avatar\n   * @param {string} link\n   * @returns Promise\n   */\n  function handleAvatarSubmit(link) {\n    return api\n      .updateUserAvatar(link)\n      .then(({ avatar }) => setCurrentUser({ ...currentUser, avatar }))\n      .then(() => setIsEditAvatarPopupOpen(false))\n      .catch((e) => console.log(e));\n  }\n  /**\n   * Confirmation dialog to delete a card\n   * @returns Promise\n   */\n  function handleConfirmSubmit() {\n    const id = confirmPopupState.cardId;\n    return api\n      .deleteCard(id)\n      .then(() => setCards(cards.filter((card) => card._id !== id)))\n      .then(() => setConfirmPopupState({ isOpen: false, cardId: \"\" }))\n      .catch((e) => console.log(e));\n  }\n\n  /*\n    Card functions\n  */\n  const handleCardClick = (card) => setSelectedCard(card);\n  const handleCardLike = (card) => {\n    const hasLike = card.likes.some((like) => like._id === currentUser._id);\n    (() => (hasLike ? api.removeLike(card._id) : api.addLike(card._id)))()\n      .then((updatedCard) => {\n        const index = cards.findIndex(({ _id: id }) => id === updatedCard._id);\n        setCards([\n          ...cards.slice(0, index),\n          updatedCard,\n          ...cards.slice(index + 1),\n        ]);\n      })\n      .catch((e) => console.log(e));\n  };\n  const handleCardDelete = (card) => {\n    setConfirmPopupState({ isOpen: true, cardId: card._id });\n  };\n\n  /*\n    Api calls\n  */\n\n  let api = getApi(localStorage.getItem(\"jwt\"));\n\n  function updateCards() {\n    return api\n      .getCards()\n      .then((data) => setCards(data))\n      .catch((e) => console.log(e));\n  }\n\n  function updateUserInfo() {\n    return api\n      .getUserInfo()\n      .then((data) => {\n        setCurrentUser({ ...currentUser, signedIn: true, ...data });\n        return true;\n      })\n      .catch((e) => Promise.reject(\"Token is not valid\"));\n  }\n\n  /*\n    Auth\n  */\n\n  function saveToken({ token }) {\n    localStorage.setItem(\"jwt\", token);\n  }\n\n  function removeToken() {\n    localStorage.removeItem(\"jwt\");\n  }\n\n  function login({ email, password }) {\n    auth\n      .signin({ email, password })\n      .then((data) => {\n        saveToken(data);\n        api = getApi(localStorage.getItem(\"jwt\"));\n        setCurrentUser({ ...currentUser, signedIn: true });\n        navigate(\"/\", { replace: true });\n      })\n      .catch(() => {\n        setisInfoTooltipOpen({ isOpen: true, hasSucceed: false });\n      });\n  }\n\n  function register({ email, password }) {\n    auth\n      .signup({ email, password })\n      .then((data) => {\n        if (data.error) throw new Error({ message: \"Failed to register\" });\n        setisInfoTooltipOpen({ isOpen: true, hasSucceed: true });\n        login({ email, password });\n      })\n      .catch(() => {\n        setisInfoTooltipOpen({ isOpen: true, hasSucceed: false });\n      });\n  }\n\n  function logout() {\n    removeToken();\n    setCurrentUser({ ...currentUser, signedIn: false, email: null });\n  }\n\n  async function checkLocalStorageToken() {\n    try {\n      const isValid = await updateUserInfo();\n      if (isValid) navigate(\"/\", { replace: true });\n      else setCurrentUser({ ...currentUser, signedIn: false });\n    } catch (err) {\n      setCurrentUser({ ...currentUser, signedIn: false });\n      console.log(err);\n    }\n  }\n\n  React.useEffect(() => {\n    if (currentUser.signedIn === null) checkLocalStorageToken();\n    if (currentUser.signedIn) {\n      Promise.all([updateCards(), updateUserInfo()]).catch((e) =>\n        console.log(e)\n      );\n    }\n  }, [currentUser.signedIn]);\n\n  return (\n    <>\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header onLogout={logout} />\n        <Routes>\n          <Route path=\"/login\" element={<Login handleLogin={login} />} />\n          <Route\n            path=\"/register\"\n            element={<Register handleRegistration={register} />}\n          />\n          <Route\n            path=\"/*\"\n            element={\n              <ProtectedRoute>\n                <Main\n                  onEditProfileClick={handleEditProfileClick}\n                  onAddPlaceClick={handleAddPlaceClick}\n                  onEditAvatarClick={handleEditAvatarClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                  cardsList={cards}\n                />\n              </ProtectedRoute>\n            }\n          />\n        </Routes>\n        <Outlet />\n\n        <InfoTooltip {...isInfoTooltipOpen} onClose={closeAllPopups} />\n\n        <EditProfilePopup\n          title=\"Edit profile\"\n          name=\"edit-profile\"\n          buttonText=\"Save\"\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handlProfileSubmit}\n        />\n\n        <AddPlacePopup\n          title=\"New Place\"\n          name=\"new-place\"\n          buttonText=\"Create\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handlePlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          title=\"Change profile picture\"\n          name=\"edit-avatar\"\n          buttonText=\"Save\"\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleAvatarSubmit}\n        />\n\n        <PopupWithForm\n          title=\"Are you sure?\"\n          name=\"confirm\"\n          buttonText=\"Yes\"\n          isOpen={confirmPopupState.isOpen}\n          onClose={closeAllPopups}\n          onSubmit={handleConfirmSubmit}\n        />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n      </CurrentUserContext.Provider>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}